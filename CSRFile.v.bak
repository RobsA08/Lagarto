module CSRFile(
    input             clk,
    input             rst,

    // Interfaz para un solo puerto CSR
    input      [11:0] csr_addr,
    input      [31:0] csr_wdata,
    input             csr_write,     // 1= escribir
    output reg [31:0] csr_rdata,

    // (Opcionales si implementas CSRRS/CSRRC)
    input      [31:0] csr_set,       
    input             csr_set_valid, 

    // Salidas con el valor actual de los CSRs
    output reg [31:0] mstatus,  // 0x300
    output reg [31:0] mie,      // 0x304
    output reg [31:0] mtvec,    // 0x305
    output reg [31:0] mepc,     // 0x341
    output reg [31:0] mcause,   // 0x342
    output reg [31:0] mip       // 0x344
);

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            mstatus <= 32'h0;
            mie     <= 32'h0;
            mtvec   <= 32'h0;
            mepc    <= 32'h0;
            mcause  <= 32'h0;
            mip     <= 32'h0;
        end
        else begin
            // Escritura directa (CSRRW)
            if (csr_write) begin
                case (csr_addr)
                    12'h300: mstatus <= csr_wdata; 
                    12'h304: mie     <= csr_wdata; 
                    12'h305: mtvec   <= csr_wdata; 
                    12'h341: mepc    <= csr_wdata; 
                    12'h342: mcause  <= csr_wdata; 
                    12'h344: mip     <= csr_wdata; 
                    default: ;
                endcase
            end
            // Ejemplo bÃ¡sico para CSRRS/CSRRC (solo set)
            else if (csr_set_valid) begin
                case (csr_addr)
                    12'h300: mstatus <= mstatus | csr_set; 
                    12'h304: mie     <= mie     | csr_set;
                    // etc.
                endcase
            end
        end
    end

    // Lectura combinacional
    always @(*) begin
        case (csr_addr)
            12'h300: csr_rdata = mstatus;
            12'h304: csr_rdata = mie;
            12'h305: csr_rdata = mtvec;
            12'h341: csr_rdata = mepc;
            12'h342: csr_rdata = mcause;
            12'h344: csr_rdata = mip;
            default: csr_rdata = 32'h0; // no implementado
        endcase
    end

endmodule
